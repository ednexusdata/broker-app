name: ednexusdata-broker
services:
  production_web:
    container_name: broker-web-production
    image: ghcr.io/ednexusdata/broker-web:edge
    volumes:
      - ./production/config/web:/app/settings
      - ./production/connectors/web:/app/connectors
    depends_on:
      - db
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "5000:80"
    networks:
      - broker
    restart: unless-stopped
  production_worker:
    container_name: broker-worker-production
    image: ghcr.io/ednexusdata/broker-worker:edge
    volumes:
      - ./production/config/worker:/app/settings
      - ./production/connectors/worker:/app/connectors
    depends_on:
      - db
    networks:
      - broker
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DOTNET_ENVIRONMENT=Production
    restart: unless-stopped
  train_web:
    container_name: broker-web-train
    image: ghcr.io/ednexusdata/broker-web:edge
    volumes:
      - ./train/config/web:/app/settings
      - ./train/connectors/web:/app/connectors
    depends_on:
      - db
    environment:
      - ASPNETCORE_ENVIRONMENT=Train
    ports:
      - "5005:80"
  train_worker:
    container_name: broker-worker-train
    image: ghcr.io/ednexusdata/broker-worker:edge
    volumes:
      - ./train/config/worker:/app/settings
      - ./train/connectors/worker:/app/connectors
    depends_on:
      - db
    networks:
      - broker
    environment:
      - ASPNETCORE_ENVIRONMENT=Train
      - DOTNET_ENVIRONMENT=Train
    restart: unless-stopped
  db:
    container_name: broker-db
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
      PGUSER: postgres
    volumes:
      - /data/pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - broker
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
volumes:
  db-data: {}
networks:
  broker:
    driver: bridge
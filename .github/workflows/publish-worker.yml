name: Publish EdNexusData.Broker.Worker

run-name: "Publish EdNexusData.Broker.Worker"

on:
  push:
    tags:
      - 'edge-*'
  release:
    types: [published]
  repository_dispatch:
    types: [trigger-next]

jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ['linux/amd64','linux/arm64']
        include:
          - kind: linux/amd64
            os: ubuntu-latest
            target: linux-amd64
          - kind: linux/arm64
            os: ubuntu-latest
            target: linux-arm64
    runs-on: ${{ matrix.os }}
    outputs:
      triggered_tag: ${{ steps.triggered_tag.outputs.triggered_tag }}
    steps:
      - name: Determine Triggered Tag
        id: triggered_tag
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "Triggered by Release: ${{ github.event.release.tag_name }}"
            echo "triggered_tag=${{ github.event.release.tag_name }}" >> "$GITHUB_OUTPUT"
            echo "TRIGGERED_TAG=${{ github.event.release.tag_name }}" >> "$GITHUB_ENV"
          elif [[ "${{ github.event_name }}" == "repository_dispatch" && "${{ github.event.action }}" == "trigger-next" ]]; then
            echo "Triggered by client-payload: ${{ github.event.client_payload.tag }}"
            echo "triggered_tag=${{ github.event.client_payload.tag }}" >> "$GITHUB_OUTPUT"
            echo "TRIGGERED_TAG=${{ github.event.client_payload.tag }}" >> "$GITHUB_ENV"
          else
            echo "Triggered by Push: ${{ github.ref_name }}"
            echo "triggered_tag=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
            echo "TRIGGERED_TAG=${{ github.ref_name }}" >> "$GITHUB_ENV"
          fi
    
      - name: Checkout broker-app
        uses: actions/checkout@v4

      - name: Clone broker-common into same level
        run: |
          git clone https://github.com/ednexusdata/broker-common.git /home/runner/work/broker-app/broker-common

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Restore dependencies
        run: dotnet restore /home/runner/work/broker-app/broker-app/src/EdNexusData.Broker.Worker/EdNexusData.Broker.Worker.csproj

      - name: Build
        shell: bash
        run: |
          tag=${{ env.TRIGGERED_TAG }} # $(git describe --tags --abbrev=0)
          release_name="EdNexusData.Broker.Worker-$tag-${{ matrix.target }}"

          # Build everything
          dotnet publish /home/runner/work/broker-app/broker-app/src/EdNexusData.Broker.Worker/EdNexusData.Broker.Worker.csproj --framework net8.0 --runtime "${{ matrix.target }}" -c Release -o "$release_name"

          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            # Pack to zip for Windows
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            tar czvf "${release_name}.tar.gz" "$release_name"
          fi

          # Move output directory to docker context
          mv "$release_name" /home/runner/work/broker-app/broker-app/docker/worker

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TRIGGERED_TAG }}
          files: "EdNexusData.Broker.Worker*"
          prerelease: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete Older GHCR Nightly Images (Keeping Last 3)
        run: |
          IMAGE_REPO="ghcr.io/ednexusdata/broker-web"
          EDGE_IMAGES=$(gh api "orgs/ednexusdata/packages/container/broker-worker/versions" \
                           --jq '.[].id' | tail -n +4)
          for IMAGE_ID in $EDGE_IMAGES; do
            gh api -X DELETE "orgs/ednexusdata/packages/container/broker-worker/versions/$IMAGE_ID"
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: /home/runner/work/broker-app/broker-app/docker/worker
          push: true
          tags: ghcr.io/ednexusdata/broker-worker:${{ env.TRIGGERED_TAG }}-${{ matrix.target }}
          platforms: ${{ matrix.kind }}
          build-args: |
            GITHUB_RELEASE_TAG=${{ env.TRIGGERED_TAG }} 

  merge-manifest:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Merge Multi-Arch Manifest
        run: |
          IMAGE_NAME="ghcr.io/ednexusdata/broker-worker"
          docker manifest create $IMAGE_NAME:${{ needs.release.outputs.triggered_tag }}} \
            --amend $IMAGE_NAME:${{ needs.release.outputs.triggered_tag }}-linux-amd64 \
            --amend $IMAGE_NAME:${{ needs.release.outputs.triggered_tag }}-linux-arm64

          docker manifest push $IMAGE_NAME:${{ needs.release.outputs.triggered_tag }}

          docker tag $IMAGE_NAME:${{ needs.release.outputs.triggered_tag }} $IMAGE_NAME:edge
          docker push $IMAGE_NAME:edge

name: Publish EdNexusData.Broker.Worker

on:
  release:
    types: [published]

jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ['linux/amd64','linux/arm64']
        include:
          - kind: linux/amd64
            os: ubuntu-latest
            target: linux-amd64
          - kind: linux/arm64
            os: ubuntu-latest
            target: linux-arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout broker-app
        uses: actions/checkout@v4

      - name: Clone broker-common into same level
        run: |
          git clone https://github.com/ednexusdata/broker-common.git /home/runner/work/broker-app/broker-common

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Restore dependencies
        run: dotnet restore /home/runner/work/broker-app/broker-app/src/EdNexusData.Broker.Worker/EdNexusData.Broker.Worker.csproj

      - name: Build
        shell: bash
        run: |
          tag=$(git describe --tags --abbrev=0)
          release_name="EdNexusData.Broker.Worker-$tag-${{ matrix.target }}"

          # Build everything
          dotnet publish /home/runner/work/broker-app/broker-app/src/EdNexusData.Broker.Worker/EdNexusData.Broker.Worker.csproj --framework net8.0 --runtime "${{ matrix.target }}" -c Release -o "$release_name"

          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            # Pack to zip for Windows
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            tar czvf "${release_name}.tar.gz" "$release_name"
          fi

          # Delete output directory
          rm -r "$release_name"

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "EdNexusData.Broker.Worker*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry using GITHUB_TOKEN
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push Docker image
        run: |
          cd /home/runner/work/broker-app/broker-app/docker/worker
          tag=$(git describe --tags --abbrev=0)
          docker buildx build --build-arg GITHUB_RELEASE_TAG="$tag" --platform ${{ matrix.kind }} -t ghcr.io/ednexusdata/broker-worker:$tag --push .

CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "__BrokerSeedsHistory" (
        "SeedId" text NOT NULL,
        "SeedName" text NOT NULL,
        CONSTRAINT "PK___BrokerSeedsHistory" PRIMARY KEY ("SeedId")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "AspNetRoles" (
        "Id" uuid NOT NULL,
        "Name" character varying(256),
        "NormalizedName" character varying(256),
        "ConcurrencyStamp" text,
        CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "AspNetUsers" (
        "Id" uuid NOT NULL,
        "UserName" character varying(256),
        "NormalizedUserName" character varying(256),
        "Email" character varying(256),
        "NormalizedEmail" character varying(256),
        "EmailConfirmed" boolean NOT NULL,
        "PasswordHash" text,
        "SecurityStamp" text,
        "ConcurrencyStamp" text,
        "PhoneNumber" text,
        "PhoneNumberConfirmed" boolean NOT NULL,
        "TwoFactorEnabled" boolean NOT NULL,
        "LockoutEnd" timestamp with time zone,
        "LockoutEnabled" boolean NOT NULL,
        "AccessFailedCount" integer NOT NULL,
        CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "DataProtectionKeys" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "FriendlyName" text,
        "Xml" text,
        CONSTRAINT "PK_DataProtectionKeys" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "EducationOrganizations" (
        "EducationOrganizationId" uuid NOT NULL,
        "ParentOrganizationId" uuid,
        "Name" text NOT NULL,
        "ShortName" text NOT NULL,
        "Number" text,
        "EducationOrganizationType" integer NOT NULL,
        "Address" jsonb,
        "Domain" text,
        "TimeZone" text,
        "Contacts" jsonb,
        "CreatedAt" timestamp with time zone NOT NULL,
        "UpdatedAt" timestamp with time zone,
        "CreatedBy" uuid,
        "UpdatedBy" uuid,
        CONSTRAINT "PK_EducationOrganizations" PRIMARY KEY ("EducationOrganizationId"),
        CONSTRAINT "FK_EducationOrganizations_EducationOrganizations_ParentOrganiz~" FOREIGN KEY ("ParentOrganizationId") REFERENCES "EducationOrganizations" ("EducationOrganizationId")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "AspNetRoleClaims" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "RoleId" uuid NOT NULL,
        "ClaimType" text,
        "ClaimValue" text,
        CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "AspNetUserClaims" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "UserId" uuid NOT NULL,
        "ClaimType" text,
        "ClaimValue" text,
        CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "AspNetUserLogins" (
        "LoginProvider" text NOT NULL,
        "ProviderKey" text NOT NULL,
        "ProviderDisplayName" text,
        "UserId" uuid NOT NULL,
        CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
        CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "AspNetUserRoles" (
        "UserId" uuid NOT NULL,
        "RoleId" uuid NOT NULL,
        CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
        CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
        CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "AspNetUserTokens" (
        "UserId" uuid NOT NULL,
        "LoginProvider" text NOT NULL,
        "Name" text NOT NULL,
        "Value" text,
        CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
        CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "Users" (
        "UserId" uuid NOT NULL,
        "FirstName" text NOT NULL,
        "LastName" text NOT NULL,
        "IsSuperAdmin" boolean NOT NULL,
        "AllEducationOrganizations" integer NOT NULL,
        "TimeZone" text,
        "CreatedAt" timestamp with time zone NOT NULL,
        "UpdatedAt" timestamp with time zone,
        "CreatedBy" uuid,
        "UpdatedBy" uuid,
        CONSTRAINT "PK_Users" PRIMARY KEY ("UserId"),
        CONSTRAINT "FK_Users_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "EducationOrganizationConnectorSettings" (
        "EducationOrganizationConnectorSettingsId" uuid NOT NULL,
        "EducationOrganizationId" uuid,
        "Connector" text NOT NULL,
        "Settings" jsonb,
        "CreatedAt" timestamp with time zone NOT NULL,
        "UpdatedAt" timestamp with time zone,
        "CreatedBy" uuid,
        "UpdatedBy" uuid,
        CONSTRAINT "PK_EducationOrganizationConnectorSettings" PRIMARY KEY ("EducationOrganizationConnectorSettingsId"),
        CONSTRAINT "FK_EducationOrganizationConnectorSettings_EducationOrganizatio~" FOREIGN KEY ("EducationOrganizationId") REFERENCES "EducationOrganizations" ("EducationOrganizationId")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "EducationOrganizationPayloadSettings" (
        "EducationOrganizationPayloadSettingsId" uuid NOT NULL,
        "EducationOrganizationId" uuid,
        "Payload" text NOT NULL,
        "CreatedAt" timestamp with time zone NOT NULL,
        "UpdatedAt" timestamp with time zone,
        "CreatedBy" uuid,
        "UpdatedBy" uuid,
        "IncomingPayloadSettings" jsonb,
        "OutgoingPayloadSettings" jsonb,
        CONSTRAINT "PK_EducationOrganizationPayloadSettings" PRIMARY KEY ("EducationOrganizationPayloadSettingsId"),
        CONSTRAINT "FK_EducationOrganizationPayloadSettings_EducationOrganizations~" FOREIGN KEY ("EducationOrganizationId") REFERENCES "EducationOrganizations" ("EducationOrganizationId")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "Requests" (
        "RequestId" uuid NOT NULL,
        "EducationOrganizationId" uuid NOT NULL,
        "Student" jsonb,
        "Payload" text NOT NULL,
        "RequestProcessUserId" uuid,
        "InitialRequestSentDate" timestamp with time zone,
        "RequestManifest" jsonb,
        "ResponseManifest" jsonb,
        "ResponseProcessUserId" uuid,
        "IncomingOutgoing" integer NOT NULL,
        "RequestStatus" integer NOT NULL,
        "MatchDisposition" integer,
        "Open" boolean NOT NULL,
        "CreatedAt" timestamp with time zone NOT NULL,
        "UpdatedAt" timestamp with time zone,
        "CreatedBy" uuid,
        "UpdatedBy" uuid,
        CONSTRAINT "PK_Requests" PRIMARY KEY ("RequestId"),
        CONSTRAINT "FK_Requests_EducationOrganizations_EducationOrganizationId" FOREIGN KEY ("EducationOrganizationId") REFERENCES "EducationOrganizations" ("EducationOrganizationId") ON DELETE CASCADE,
        CONSTRAINT "FK_Requests_Users_RequestProcessUserId" FOREIGN KEY ("RequestProcessUserId") REFERENCES "Users" ("UserId"),
        CONSTRAINT "FK_Requests_Users_ResponseProcessUserId" FOREIGN KEY ("ResponseProcessUserId") REFERENCES "Users" ("UserId")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "UserRoles" (
        "UserRoleId" uuid NOT NULL,
        "EducationOrganizationId" uuid,
        "UserId" uuid,
        "Role" integer NOT NULL,
        "CreatedAt" timestamp with time zone NOT NULL,
        "UpdatedAt" timestamp with time zone,
        "CreatedBy" uuid,
        "UpdatedBy" uuid,
        CONSTRAINT "PK_UserRoles" PRIMARY KEY ("UserRoleId"),
        CONSTRAINT "FK_UserRoles_EducationOrganizations_EducationOrganizationId" FOREIGN KEY ("EducationOrganizationId") REFERENCES "EducationOrganizations" ("EducationOrganizationId"),
        CONSTRAINT "FK_UserRoles_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("UserId")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "Worker_Jobs" (
        "JobId" uuid NOT NULL,
        "QueueDateTime" timestamp with time zone NOT NULL,
        "StartDateTime" timestamp with time zone,
        "FinishDateTime" timestamp with time zone,
        "JobType" text,
        "JobParameters" jsonb,
        "ReferenceType" text,
        "ReferenceGuid" uuid,
        "JobStatus" integer NOT NULL,
        "WorkerInstance" text,
        "WorkerState" text,
        "WorkerLog" text,
        "InitiatedUserId" uuid,
        "CreatedAt" timestamp with time zone NOT NULL,
        "UpdatedAt" timestamp with time zone,
        "CreatedBy" uuid,
        "UpdatedBy" uuid,
        CONSTRAINT "PK_Worker_Jobs" PRIMARY KEY ("JobId"),
        CONSTRAINT "FK_Worker_Jobs_Users_InitiatedUserId" FOREIGN KEY ("InitiatedUserId") REFERENCES "Users" ("UserId")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "Messages" (
        "MessageId" uuid NOT NULL,
        "RequestId" uuid NOT NULL,
        "RequestResponse" integer NOT NULL,
        "MessageType" text,
        "MessageTimestamp" timestamp with time zone,
        "SentTimestamp" timestamp with time zone,
        "MessageContents" jsonb,
        "TransmissionDetails" jsonb,
        "RequestStatus" integer,
        "MessageStatus" integer,
        "CreatedAt" timestamp with time zone NOT NULL,
        "UpdatedAt" timestamp with time zone,
        "CreatedBy" uuid,
        "UpdatedBy" uuid,
        CONSTRAINT "PK_Messages" PRIMARY KEY ("MessageId"),
        CONSTRAINT "FK_Messages_Requests_RequestId" FOREIGN KEY ("RequestId") REFERENCES "Requests" ("RequestId") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "PayloadContents" (
        "PayloadContentId" uuid NOT NULL,
        "RequestId" uuid NOT NULL,
        "MessageId" uuid,
        "ContentType" text,
        "FileName" text,
        "BlobContent" bytea,
        "JsonContent" jsonb,
        "XmlContent" xml,
        "CreatedAt" timestamp with time zone NOT NULL,
        "UpdatedAt" timestamp with time zone,
        "CreatedBy" uuid,
        "UpdatedBy" uuid,
        CONSTRAINT "PK_PayloadContents" PRIMARY KEY ("PayloadContentId"),
        CONSTRAINT "FK_PayloadContents_Messages_MessageId" FOREIGN KEY ("MessageId") REFERENCES "Messages" ("MessageId"),
        CONSTRAINT "FK_PayloadContents_Requests_RequestId" FOREIGN KEY ("RequestId") REFERENCES "Requests" ("RequestId") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "Mappings" (
        "MappingId" uuid NOT NULL,
        "PayloadContentActionId" uuid,
        "OriginalSchema" jsonb,
        "MappingType" text,
        "StudentAttributes" jsonb,
        "JsonSourceMapping" jsonb,
        "JsonInitialMapping" jsonb,
        "JsonDestinationMapping" jsonb,
        "Version" smallint NOT NULL DEFAULT 1,
        "CreatedAt" timestamp with time zone NOT NULL,
        "UpdatedAt" timestamp with time zone,
        "CreatedBy" uuid,
        "UpdatedBy" uuid,
        CONSTRAINT "PK_Mappings" PRIMARY KEY ("MappingId")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE TABLE "PayloadContentActions" (
        "PayloadContentActionId" uuid NOT NULL,
        "PayloadContentId" uuid,
        "PayloadContentActionType" text,
        "ActiveMappingId" uuid,
        "Settings" jsonb,
        "Process" boolean NOT NULL,
        "PayloadContentActionStatus" integer NOT NULL,
        "ProcessState" text,
        "CreatedAt" timestamp with time zone NOT NULL,
        "UpdatedAt" timestamp with time zone,
        "CreatedBy" uuid,
        "UpdatedBy" uuid,
        CONSTRAINT "PK_PayloadContentActions" PRIMARY KEY ("PayloadContentActionId"),
        CONSTRAINT "FK_PayloadContentActions_Mappings_ActiveMappingId" FOREIGN KEY ("ActiveMappingId") REFERENCES "Mappings" ("MappingId"),
        CONSTRAINT "FK_PayloadContentActions_PayloadContents_PayloadContentId" FOREIGN KEY ("PayloadContentId") REFERENCES "PayloadContents" ("PayloadContentId")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE UNIQUE INDEX "IX_EducationOrganizationConnectorSettings_EducationOrganizatio~" ON "EducationOrganizationConnectorSettings" ("EducationOrganizationId", "Connector");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE UNIQUE INDEX "IX_EducationOrganizationPayloadSettings_EducationOrganizationI~" ON "EducationOrganizationPayloadSettings" ("EducationOrganizationId", "Payload");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE UNIQUE INDEX "IX_EducationOrganizations_Domain" ON "EducationOrganizations" ("Domain");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE INDEX "IX_EducationOrganizations_ParentOrganizationId" ON "EducationOrganizations" ("ParentOrganizationId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE UNIQUE INDEX "IX_Mappings_PayloadContentActionId_Version" ON "Mappings" ("PayloadContentActionId", "Version");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE INDEX "IX_Messages_RequestId" ON "Messages" ("RequestId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE UNIQUE INDEX "IX_PayloadContentActions_ActiveMappingId" ON "PayloadContentActions" ("ActiveMappingId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE UNIQUE INDEX "IX_PayloadContentActions_PayloadContentId_PayloadContentAction~" ON "PayloadContentActions" ("PayloadContentId", "PayloadContentActionType");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE INDEX "IX_PayloadContents_MessageId" ON "PayloadContents" ("MessageId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE INDEX "IX_PayloadContents_RequestId" ON "PayloadContents" ("RequestId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE INDEX "IX_Requests_EducationOrganizationId" ON "Requests" ("EducationOrganizationId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE INDEX "IX_Requests_RequestProcessUserId" ON "Requests" ("RequestProcessUserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE INDEX "IX_Requests_ResponseProcessUserId" ON "Requests" ("ResponseProcessUserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE UNIQUE INDEX "IX_UserRoles_EducationOrganizationId_UserId" ON "UserRoles" ("EducationOrganizationId", "UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE INDEX "IX_UserRoles_UserId" ON "UserRoles" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    CREATE INDEX "IX_Worker_Jobs_InitiatedUserId" ON "Worker_Jobs" ("InitiatedUserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    ALTER TABLE "Mappings" ADD CONSTRAINT "FK_Mappings_PayloadContentActions_PayloadContentActionId" FOREIGN KEY ("PayloadContentActionId") REFERENCES "PayloadContentActions" ("PayloadContentActionId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250112170235_InitialMigration') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250112170235_InitialMigration', '8.0.16');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250215230118_AddConnectorRefs') THEN
    CREATE TABLE "ConnectorReference" (
        "ConnectorReferenceId" uuid NOT NULL,
        "Reference" text NOT NULL,
        "Version" text NOT NULL,
        "CreatedAt" timestamp with time zone NOT NULL,
        "UpdatedAt" timestamp with time zone,
        "CreatedBy" uuid,
        "UpdatedBy" uuid,
        CONSTRAINT "PK_ConnectorReference" PRIMARY KEY ("ConnectorReferenceId")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250215230118_AddConnectorRefs') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250215230118_AddConnectorRefs', '8.0.16');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250216214241_ConnectorRefUniqueConstraint') THEN
    CREATE UNIQUE INDEX "IX_ConnectorReference_Reference" ON "ConnectorReference" ("Reference");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250216214241_ConnectorRefUniqueConstraint') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250216214241_ConnectorRefUniqueConstraint', '8.0.16');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250426181339_EnabledForEdOrgConnector') THEN
    ALTER TABLE "EducationOrganizationConnectorSettings" ADD "Enabled" boolean NOT NULL DEFAULT FALSE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250426181339_EnabledForEdOrgConnector') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250426181339_EnabledForEdOrgConnector', '8.0.16');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250531140158_AddSettings') THEN
    CREATE TABLE "Settings" (
        "SettingId" uuid NOT NULL,
        "Key" text,
        "Value" text,
        "CreatedAt" timestamp with time zone NOT NULL,
        "UpdatedAt" timestamp with time zone,
        "CreatedBy" uuid,
        "UpdatedBy" uuid,
        CONSTRAINT "PK_Settings" PRIMARY KEY ("SettingId")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250531140158_AddSettings') THEN
    CREATE UNIQUE INDEX "IX_Settings_Key" ON "Settings" ("Key");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250531140158_AddSettings') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250531140158_AddSettings', '8.0.16');
    END IF;
END $EF$;
COMMIT;


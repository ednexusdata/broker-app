@model EdNexusData.Broker.Web.ViewModels.Mappings.MappingViewModel;
@using EdNexusData.Broker.Web.ViewModels.Mappings;
@using static EdNexusData.Broker.Web.Constants.Claims.CustomClaimType;
@using EdNexusData.Broker.Domain;
@{
  // Copyright: 2023 Education Nexus Oregon
  // Author: Makoa Jacobsen, makoa@makoajacobsen.com
  ViewData["Title"] = "Mapping";
  Layout = "_AuthenticatedLayout";
  ViewData["FocusBar"] = true;
  ViewData["FocusBarReadOnly"] = true;

  var propertyCounter = 0;
}

<form method="post" asp-action="Update" autocomplete="off">
  <input type="hidden" name="MappingId" value="@Model.MappingId" />
  <input type="hidden" name="_METHOD" value="PUT" />
  <div class="space-y-10 divide-y divide-gray-900/10">
    <div class="px-4 sm:px-0">
      <div class="bg-white shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl">
        <div class="grid gap-6 px-4 py-6 sm:p-8">
          <div>
            <h2 class="text-base font-semibold leading-7 text-gray-900">Releasing School Student Data</h2>
            <p class="mt-1 text-sm leading-6 text-gray-600">The student data provided by the releasing school.</p>
          </div>
          <div class="grid gap-6">
            <div class="grid gap-6 rounded-lg shadow-sm ring-1 ring-gray-900/5">
              <div class="border border-gray-200">
                <div class="flex flex-col">
                  <div class="flex bg-gray-100">
                    <div class="flex-2 px-4 py-2 border-r border-gray-200 text-center text-sm align-middle font-semibold text-gray-900 ">
                      <div class="flex space-x-2 justify-evenly">
                      <input type="checkbox" class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-600 invisible">
                      <svg class="h-5 w-5 invisible" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                      </svg>
                      </div>
                    </div>
                    @foreach(var property in Model.EditingProperties!)
                    {
                      <div class="flex-1 px-4 py-2 border-r border-gray-200 text-center text-sm align-middle font-semibold text-gray-900 ">@Model.GetPropertyDisplayName(property)?.DisplayName</div>
                    }
                  </div>
                  @foreach(var record in Model.MappingDestinationRecords!)
                  {
                    var bgColor = "";
                    @if(propertyCounter % 2 == 0) { bgColor = "bg-gray-50"; } else { bgColor = "bg-white"; }
                  <div class="@bgColor" x-data="dataTable" data-detailLoaded="no" data-brokerid="@record.BrokerId" data-brokerCounter="@propertyCounter">
                    <div class="flex">
                      <div class="flex-2 px-4 py-2 text-sm text-center text-gray-600 border-r border-b border-gray-200">
                        <div class="flex space-x-2 justify-evenly">
                        <input type="hidden" name="@MappingViewModel.InputName(Model.Mapping!.MappingType!, propertyCounter, "BrokerId")" value="@record.BrokerId">
                        <input type="hidden" name="@MappingViewModel.InputName(Model.Mapping!.MappingType!, propertyCounter, "BrokerOriginalId")" value="@record.BrokerOriginalId">
                        <input type="checkbox" name="@MappingViewModel.InputName(Model.Mapping!.MappingType!, propertyCounter, "BrokerMappingRecordAction")" 
                          class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-600"
                          value="@MappingRecordAction.Ignore"
                          checked="@(record.BrokerMappingRecordAction == MappingRecordAction.Ignore)">
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" x-on:click="loadDetail">
                          <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                        </svg>
                        </div>
                      </div>
                      @foreach(var property in Model.EditingProperties!)
                      {
                      <div class="flex-1 px-4 py-2 text-sm text-center text-gray-600 border-r border-b border-gray-200" x-on:click="loadDetail">@MappingViewModel.ValueForProperty(record, property)</div>
                      }
                    </div>
                    <!-- Detail Table -->
                    <div class="m-2 border border-gray-200" data-detailRow="yes" x-show="detailOpen" x-transition>Test Row</div>  
                  </div>
                  propertyCounter++;
                  }
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="flex items-center justify-end gap-x-6 border-t border-gray-900/10 px-4 py-4 sm:px-8">
          <a asp-controller="Preparing" asp-action="Index" asp-route-id="@Model.RequestId" asp-authorize asp-policy="@TransferIncomingRecords"
            class="text-sm font-semibold leading-6 text-gray-900">
            Back to Prepare
          </a>
          <input asp-for="MappingId" type="hidden" />
          <button type="submit"
            class="rounded-md bg-tertiary-50 px-3 py-2 text-sm font-semibold text-tertiary-600 shadow-sm hover:bg-tertiary-100">
            Save
          </button>
        </div>
      </div>
    </div>
  </div>
</form>

@section scripts
{
<script>
  document.addEventListener('alpine:init', () => {
    Alpine.data('dataTable', () => ({
      detailOpen: false,
      detailLoaded: false,
      async loadDetail(e) {
        const targetElement = e.target;
        const parentWithBrokerId = targetElement.closest('[data-brokerid]');

        const detailRow = parentWithBrokerId.querySelector('[data-detailRow]');

        if (this.detailLoaded === false) {
          try {
            const response = await fetch('/mapping/detail/@Model.MappingId?mappingBrokerId=' + parentWithBrokerId.dataset.brokerid + '&propertyCounter=' + parentWithBrokerId.dataset.brokercounter);
            const data = await response.text();

            const parser = new DOMParser();
            const doc = parser.parseFromString(data, 'text/html');
            const elementToInsert = doc.body.firstElementChild;

            this.detailLoaded = true;
            this.detailOpen = true;
            
            detailRow.innerHTML = data;
            
          } catch (error) {
            console.error('Error fetching status:', error);
          }
        } else {
          this.detailOpen = !this.detailOpen;
        }
    }}));
  });
</script>
}

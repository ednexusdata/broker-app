@model EdNexusData.Broker.Web.ViewModels.Requests.RequestViewModel;
@inject EdNexusData.Broker.Web.Helpers.TimezoneHelper TimezoneHelper;
@using static EdNexusData.Broker.Web.Constants.Claims.CustomClaimType;
@using EdNexusData.Broker.Core.Extensions;
@using EdNexusData.Broker.Core.Messages;

@if (Model.Request?.Messages != null && Model.Request.Messages.Count > 0)
{
    var messages = Model.Request?.Messages?.Where(x => x.MessageType == typeof(ChatMessage).FullName).ToList();
    @if(messages is not null)
    {
    @foreach (var message in messages)
    {
        @if (message.RequestResponse == EdNexusData.Broker.Core.RequestResponse.Response)
        {
            <div class="mt-4">
            <div class="flex flex-col w-full max-w-[60%] leading-1.5 p-4 border-gray-200 bg-gray-300 rounded-b-2xl rounded-tr-2xl">
                <div class="flex items-center space-x-2">
                    <span class="text-sm font-semibold text-gray-900">@message.MessageContents?.Sender?.Name</span>
                    <span class="text-sm font-normal text-gray-500">@TimezoneHelper.DisplayTimeFromUtc(message.SentTimestamp)</span>
                </div>
                @message.MessageContents?.MessageText
                <span class="flex text-sm font-normal text-gray-500 gap-2">
                    @message.RequestStatus?.GetDescription()
                    <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" class="self-center" width="3" height="4" viewBox="0 0 3 4" fill="none">
                        <circle cx="1.5" cy="2" r="1.5" fill="#6B7280"/>
                    </svg>
                    <a asp-action="ViewMessage" asp-route-id="@message.Id" target="_blank">Contents</a>
                    <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" class="self-center" width="3" height="4" viewBox="0 0 3 4" fill="none">
                        <circle cx="1.5" cy="2" r="1.5" fill="#6B7280"/>
                    </svg>
                    <a asp-action="ViewTransmission" asp-route-id="@message.Id" target="_blank">Transmission</a></span>
            </div>
            </div>
        }
        else
        {
            <div class="mt-4">
            <div class="flex flex-row w-full">
                <div class="w-full h-full max-w-[40%]">&nbsp;</div>
                <div class="w-full leading-1.5 p-4 border-tertiary-200 bg-tertiary-500 rounded-b-2xl rounded-tl-2xl mt-2">
                    <div class="flex items-center space-x-2 rtl:space-x-reverse">
                        <span class="text-sm font-semibold text-black dark:text-white">@message.MessageContents?.Sender?.Name</span>
                        <span class="text-sm font-normal dark:text-white">@TimezoneHelper.DisplayTimeFromUtc(message.SentTimestamp)</span>
                    </div>
                    <div>
                        @message.MessageContents?.MessageText
                    </div>
                    <span class="flex text-sm font-normal dark:text-white gap-2">
                        @message.RequestStatus?.GetDescription()
                        <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" class="self-center" width="3" height="4" viewBox="0 0 3 4" fill="none">
                            <circle cx="1.5" cy="2" r="1.5" fill="#6B7280"/>
                        </svg>
                        <a asp-action="ViewMessage" asp-route-id="@message.Id" target="_blank">Contents</a>
                        <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" class="self-center" width="3" height="4" viewBox="0 0 3 4" fill="none">
                            <circle cx="1.5" cy="2" r="1.5" fill="#6B7280"/>
                        </svg>
                        <a asp-action="ViewTransmission" asp-route-id="@message.Id" target="_blank">Transmission</a></span>
                </div>
            </div>
            </div>
        }
    }
    }
}

@if (Model.Request?.RequestStatus != EdNexusData.Broker.Common.Jobs.RequestStatus.Closed
    && Model.Request?.RequestStatus != EdNexusData.Broker.Common.Jobs.RequestStatus.Finished)
{
<form class="mt-4" asp-action="SendMessage" asp-route-id="@Model.Request?.Id">
<div class="w-full pl-3 pr-1 py-1 rounded-3xl border border-gray-200 items-center gap-2 inline-flex justify-between">
<div class="w-full flex items-center gap-2">
  <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 22 22" fill="none">
    <g id="User Circle">
      <path id="icon" d="M6.05 17.6C6.05 15.3218 8.26619 13.475 11 13.475C13.7338 13.475 15.95 15.3218 15.95 17.6M13.475 8.525C13.475 9.89191 12.3669 11 11 11C9.6331 11 8.525 9.89191 8.525 8.525C8.525 7.1581 9.6331 6.05 11 6.05C12.3669 6.05 13.475 7.1581 13.475 8.525ZM19.25 11C19.25 15.5563 15.5563 19.25 11 19.25C6.44365 19.25 2.75 15.5563 2.75 11C2.75 6.44365 6.44365 2.75 11 2.75C15.5563 2.75 19.25 6.44365 19.25 11Z" stroke="#4F46E5" stroke-width="1.6" />
    </g>
  </svg>
  <textarea name="messageText" class="w-full text-black text-sm font-medium leading-4 focus:outline-none border-0" placeholder="Type here..."></textarea>
</div>
<div class="flex items-center gap-2">
  <button class="items-center flex px-3 py-2 bg-indigo-600 rounded-full shadow ">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
      <g id="Send 01">
        <path id="icon" d="M9.04071 6.959L6.54227 9.45744M6.89902 10.0724L7.03391 10.3054C8.31034 12.5102 8.94855 13.6125 9.80584 13.5252C10.6631 13.4379 11.0659 12.2295 11.8715 9.81261L13.0272 6.34566C13.7631 4.13794 14.1311 3.03408 13.5484 2.45139C12.9657 1.8687 11.8618 2.23666 9.65409 2.97257L6.18714 4.12822C3.77029 4.93383 2.56187 5.33664 2.47454 6.19392C2.38721 7.0512 3.48957 7.68941 5.69431 8.96584L5.92731 9.10074C6.23326 9.27786 6.38623 9.36643 6.50978 9.48998C6.63333 9.61352 6.72189 9.7665 6.89902 10.0724Z" stroke="white" stroke-width="1.6" stroke-linecap="round" />
      </g>
    </svg>
    <h3 class="text-white text-sm font-semibold leading-4 px-2">Send</h3>
  </button>
</div>
</div>
</form>
}
@model EdNexusData.Broker.Web.ViewModels.Requests.RequestViewModel;
@using EdNexusData.Broker.Core.Extensions;
@using static EdNexusData.Broker.Web.Constants.Claims.CustomClaimType;
@inject EdNexusData.Broker.Web.Helpers.TimezoneHelper TimezoneHelper;
@using System.Text.Json;
@{
    // Copyright: 2023 Education Nexus Oregon
    // Author: Makoa Jacobsen, makoa@makoajacobsen.com
    ViewData["Title"] = "Request Detail";
    Layout = "_AuthenticatedLayout";
    ViewData["FocusBar"] = true;
    ViewData["FocusBarReadOnly"] = true;

    // Tailwind CSS classes defined in comments so that the processor loads the combinations
    var incomingBgColor = "gray"; // border-gray-400 bg-gray-500 bg-gray-700
    var outgoingBgColor = "tertiary"; // border-tertiary-400 bg-tertiary-400 bg-tertiary-700
    if (Model.Request?.IncomingOutgoing == EdNexusData.Broker.Core.IncomingOutgoing.Incoming)
    {
        incomingBgColor = "tertiary";
        outgoingBgColor = "gray";
    }
}
<div class="space-y-10 divide-y divide-gray-900/10">
    <div class="px-4 sm:px-0">
        <div class="bg-white shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl px-4 py-6">
            <h1 class="font-bold text-xl mb-3">@Model.Request?.Student?.Student?.FirstName @Model.Request?.Student?.Student?.MiddleName @Model.Request?.Student?.Student?.LastName</h1>
            <div class="font-semibold mb-3">Student ID: @Model.Request?.Student?.Student?.StudentNumber | DOB: @Model.Request?.Student?.Student?.Birthdate | Grade: @Model.Request?.Student?.Student?.Grade | Gender: @Model.Request?.Student?.Student?.Gender</div>
            <div class="grid grid-cols-5 bg-@incomingBgColor-700 p-1">
                <div class="border-4 border-@incomingBgColor-400 bg-@incomingBgColor-500 p-1.5 m-0.5 rounded">
                    <div class="uppercase text-sm font-bold">⮕ Incoming</div>
                    <div>@Model.Request?.RequestManifest?.From?.District?.ShortName / @Model.Request?.RequestManifest?.From?.District?.Number</div>
                    <div>@Model.Request?.RequestManifest?.From?.School?.ShortName / @Model.Request?.RequestManifest?.From?.School?.Number</div>
                </div>
                <div class="border-4 border-@incomingBgColor-400 bg-@incomingBgColor-500 p-1.5 m-0.5 rounded">
                    <div class="bg-gray-200 font-bold text-sm text-center rounded-md p-0.5 mb-1">Requested</div>
                    <div class="text-sm text-center">@Model.StatusGrid.GetValueOrDefault(EdNexusData.Broker.Common.Jobs.RequestStatus.Requested)?.Timestamp</div>
                    <div class="text-sm text-center">by @Model.StatusGrid.GetValueOrDefault(EdNexusData.Broker.Common.Jobs.RequestStatus.Requested)?.Userstamp</div>
                </div>
                <div class="border-4 border-@incomingBgColor-400 bg-@incomingBgColor-500 p-1.5 m-0.5 rounded">
                    <div class="bg-gray-200 font-bold text-sm text-center rounded-md p-0.5 mb-1">Transmitted</div>
                    <div class="text-sm text-center">@Model.StatusGrid.GetValueOrDefault(EdNexusData.Broker.Common.Jobs.RequestStatus.Transmitted)?.Timestamp</div>
                    <div class="text-sm text-center">by @Model.StatusGrid.GetValueOrDefault(EdNexusData.Broker.Common.Jobs.RequestStatus.Transmitted)?.Userstamp</div>
                </div>
                <div class="border-4 border-@incomingBgColor-400 bg-@incomingBgColor-500 p-1.5 m-0.5 rounded">
                    <div class="bg-gray-200 font-bold text-sm text-center rounded-md p-0.5 mb-1">In-Progress</div>
                    <div class="text-sm text-center">@Model.StatusGrid.GetValueOrDefault(EdNexusData.Broker.Common.Jobs.RequestStatus.InProgress)?.Timestamp</div>
                    <div class="text-sm text-center">by @Model.StatusGrid.GetValueOrDefault(EdNexusData.Broker.Common.Jobs.RequestStatus.InProgress)?.Userstamp</div>
                </div>
                <div class="border-4 border-@incomingBgColor-400 bg-@incomingBgColor-500 p-1.5 m-0.5 rounded">
                    <div class="bg-gray-200 font-bold text-sm text-center rounded-md p-0.5 mb-1">Finished</div>
                    <div class="text-sm text-center">@Model.StatusGrid.GetValueOrDefault(EdNexusData.Broker.Common.Jobs.RequestStatus.Closed)?.Timestamp</div>
                    <div class="text-sm text-center">by @Model.StatusGrid.GetValueOrDefault(EdNexusData.Broker.Common.Jobs.RequestStatus.Closed)?.Userstamp</div>
                </div>
            </div>
            <div class="grid grid-cols-5 bg-@outgoingBgColor-700 p-1">
                <div class="border-4 border-@outgoingBgColor-400 bg-@outgoingBgColor-500 p-1.5 m-0.5 rounded">
                    <div class="uppercase text-sm font-bold">Outgoing ⮕</div>
                    <div>@Model.Request?.RequestManifest?.To?.District?.ShortName / @Model.Request?.RequestManifest?.To?.District?.Number</div>
                    <div>@Model.Request?.RequestManifest?.To?.School?.ShortName / @Model.Request?.RequestManifest?.To?.School?.Number</div>
                </div>
                <div class="border-4 border-@outgoingBgColor-400 bg-@outgoingBgColor-500 p-1.5 m-0.5 rounded">
                    <div class="bg-gray-200 font-bold text-sm text-center rounded-md p-0.5 mb-1">Received</div>
                    <div class="text-sm text-center">@Model.StatusGrid.GetValueOrDefault(EdNexusData.Broker.Common.Jobs.RequestStatus.Received)?.Timestamp</div>
                    <div class="text-sm text-center">by @Model.StatusGrid.GetValueOrDefault(EdNexusData.Broker.Common.Jobs.RequestStatus.Received)?.Userstamp</div>
                </div>
                <div class="border-4 border-@outgoingBgColor-400 bg-@outgoingBgColor-500 p-1.5 m-0.5 rounded">
                    <div class="bg-gray-200 font-bold text-sm text-center rounded-md p-0.5 mb-1">Extracted</div>
                    <div class="text-sm text-center">@Model.StatusGrid.GetValueOrDefault(EdNexusData.Broker.Common.Jobs.RequestStatus.Extracted)?.Timestamp</div>
                    <div class="text-sm text-center">by @Model.StatusGrid.GetValueOrDefault(EdNexusData.Broker.Common.Jobs.RequestStatus.Extracted)?.Userstamp</div>
                </div>
                <div class="border-4 border-@outgoingBgColor-400 bg-@outgoingBgColor-500 p-1.5 m-0.5 rounded">
                    <div class="bg-gray-200 font-bold text-sm text-center rounded-md p-0.5 mb-1">Transmitted</div>
                    <div class="text-sm text-center">@Model.StatusGrid.GetValueOrDefault(EdNexusData.Broker.Common.Jobs.RequestStatus.Transmitted)?.Timestamp</div>
                    <div class="text-sm text-center">by @Model.StatusGrid.GetValueOrDefault(EdNexusData.Broker.Common.Jobs.RequestStatus.Transmitted)?.Userstamp</div>
                </div>
                <div class="border-4 border-@outgoingBgColor-400 bg-@outgoingBgColor-500 p-1.5 m-0.5 rounded">
                    <div class="bg-gray-200 font-bold text-sm text-center rounded-md p-0.5 mb-1">Closed</div>
                    <div class="text-sm text-center">@Model.StatusGrid.GetValueOrDefault(EdNexusData.Broker.Common.Jobs.RequestStatus.Closed)?.Timestamp</div>
                    <div class="text-sm text-center">by @Model.StatusGrid.GetValueOrDefault(EdNexusData.Broker.Common.Jobs.RequestStatus.Closed)?.Userstamp</div>
                </div>
            </div>
            <div class="m-5 flex flex-row justify-center items-center">
                <div class="isolate flex divide-x divide-gray-200 rounded-lg shadow" aria-label="Tabs">
                    @{
                        var selectedBgClass = "group relative min-w-0 flex-1 overflow-hidden bg-white px-4 py-4 text-center text-sm font-medium text-gray-900 hover:bg-gray-50 focus:z-10";
                        var bgClass = "group relative min-w-0 flex-1 overflow-hidden bg-white px-4 py-4 text-center text-sm font-medium text-gray-500 hover:bg-gray-50 hover:text-gray-700 focus:z-10";
                        var conversationBgUse = bgClass;
                        var transmissionBgUse = bgClass;
                        if (Model.DisplayMessagesType == EdNexusData.Broker.Web.ViewModels.Requests.RequestViewModel.DisplayMessageType.ChatMessages)
                        {
                            conversationBgUse = selectedBgClass;
                        } else if (Model.DisplayMessagesType == EdNexusData.Broker.Web.ViewModels.Requests.RequestViewModel.DisplayMessageType.TransmissionMessages)
                        {
                            transmissionBgUse = selectedBgClass;
                        }
                    }
                    <a asp-action="View" asp-route-id="@Model.Request?.Id" class="@conversationBgUse">
                        <span>Conversation</span>
                        <span aria-hidden="true" class="absolute inset-x-0 bottom-0 h-0.5 bg-transparent"></span>
                    </a>
                    <a asp-action="ViewWithTransmissions" asp-route-id="@Model.Request?.Id" class="@transmissionBgUse">
                        <span>Transmissions</span>
                        <span aria-hidden="true" class="absolute inset-x-0 bottom-0 h-0.5 bg-transparent"></span>
                    </a>
                </div>
            </div>
            @if (Model.DisplayMessagesType == EdNexusData.Broker.Web.ViewModels.Requests.RequestViewModel.DisplayMessageType.ChatMessages)
            {
                <partial name="_Messages" model="@Model" />
            }
            @if (Model.DisplayMessagesType == EdNexusData.Broker.Web.ViewModels.Requests.RequestViewModel.DisplayMessageType.TransmissionMessages)
            {
                <partial name="_Transmissions" model="@Model" />
            }
        </div>
    </div>
</div>

@section HeaderAction
{
    @if (ViewBag.JobId is not null && ViewBag.JobId.ToString() != "")
    {
    <div x-data="preparingIndex">
        <span x-text="status"></span>
    </div>
    }
    else
    {
    <div class="flex space-x-4">
        <div>@Model.Request?.RequestStatus</div>

        @if (Model.Request?.Open == false)
        {
            <div>
            <form method="post" asp-controller="Requests" asp-action="Open" asp-route-id="@Model.Request?.Id" autocomplete="off">
            <input type="hidden" name="_METHOD" value="PUT" />
            <button
                type="submit"
                class="relative inline-flex items-center rounded-md bg-tertiary-700 px-3 py-2 text-center text-sm font-semibold ring-1 ring-inset ring-tertiary-800 text-white shadow-sm hover:bg-tertiary-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-tertiary-700 focus:z-10"
            >Open</button>
            </form>
            </div>
        }
        else
        {
            @if(Model.Request?.IncomingOutgoing == EdNexusData.Broker.Core.IncomingOutgoing.Outgoing)
            {
                <div>
                <form method="post" asp-controller="Requests" asp-action="Close" asp-route-id="@Model.Request?.Id" autocomplete="off">
                <input type="hidden" name="_METHOD" value="PUT" />
                <button
                    type="submit"
                    class="relative inline-flex items-center rounded-md bg-tertiary-700 px-3 py-2 text-center text-sm font-semibold ring-1 ring-inset ring-tertiary-800 text-white shadow-sm hover:bg-tertiary-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-tertiary-700 focus:z-10"
                >Close</button>
                </form>
                </div>
            }
            @if(Model.Request?.IncomingOutgoing == EdNexusData.Broker.Core.IncomingOutgoing.Incoming)
            {
                <div>
                <form method="post" asp-controller="Requests" asp-action="Finish" asp-route-id="@Model.Request?.Id" autocomplete="off">
                <input type="hidden" name="_METHOD" value="PUT" />
                <button
                    type="submit"
                    class="relative inline-flex items-center rounded-md bg-tertiary-700 px-3 py-2 text-center text-sm font-semibold ring-1 ring-inset ring-tertiary-800 text-white shadow-sm hover:bg-tertiary-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-tertiary-700 focus:z-10"
                >Finish</button>
                </form>
                </div>
            }
            
        }
    </div>
    }
    
}

@section scripts
{
        <script>
            document.addEventListener('alpine:init', () => {

                Alpine.data('preparingIndex', () => ({
                    status: "Sending...",
                    interval: null,
                    fetchData: null,
                    initFetchData: function () {
                        this.fetchData = async () => {
                            try {
                                const response = await fetch('/api/v1/jobs?jobId=@ViewBag.JobId');
                                const data = await response.json();
                                //console.log(data);
                                this.status = data.workerState;
                                //console.log("Worker State: " + data.workerState);

                                //console.log("Job Status: " + data.jobStatus);
                                if (data.jobStatus == 2) {
                                    //console.log("Inside job status");
                                    location.reload();
                                    clearInterval(this.interval);
                                }

                            } catch (error) {
                                console.error('Error fetching status:', error);
                                clearInterval(this.interval);
                            }
                        };
                    },
                    init() {
                        this.initFetchData();
                        //console.log("Called startPolling and about to call setInterval");
                        this.interval = setInterval(this.fetchData, 2000); // Poll every 2 seconds (adjust as needed)
                        //this.status = "Called setInternal";
                        //console.log("Called setInterval");

                    },
                    destroy() {
                        // Detach the handler, avoiding memory and side-effect leakage
                        clearInterval(this.interval);
                    },
                }))

            });
        </script>
}